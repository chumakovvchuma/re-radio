name: Google Cloud Platform deployment
on: 
  # Allows you to run this workflow by using Rest API
  deployment: 
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Set deployment state to pending
        env:
          REPO_DEPLOYMENT_TOKEN: ${{ secrets.REPO_DEPLOYMENT_TOKEN }}
        if: ${{ env.REPO_DEPLOYMENT_TOKEN != null }}
        uses: deliverybot/deployment-status@v1
        with:
          state: pending
          token: ${{ secrets.REPO_DEPLOYMENT_TOKEN }}
      - name: Check out code
        uses: actions/checkout@master
      - name: Build docker image
        env:
          APP_IMAGE: ${{ secrets.DOCKER_HUB_APP_IMAGE }}
        run: docker build -t ${APP_IMAGE} -f .gcloud/Dockerfile .
      - name: Login to Docker Hub Registry
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
      - name: Push docker image
        env:
          APP_IMAGE: ${{ secrets.DOCKER_HUB_APP_IMAGE }}
        run: docker push ${APP_IMAGE}
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "271.0.0"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Deploy
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          VM_INSTANCE: ${{ secrets.GCP_VM_INSTANCE }}
          VM_USER: ${{ secrets.GCP_VM_USER }}
          VM_ZONE: ${{ secrets.GCP_VM_ZONE }}
        run: |
          gcloud config set project ${PROJECT_ID}
          gcloud compute scp .gcloud/docker-compose.yml .gcloud/deploy.sh ${VM_USER}@${VM_INSTANCE}:~ --zone=${VM_ZONE}
          gcloud compute ssh ${VM_USER}@${VM_INSTANCE} --zone=${VM_ZONE} --command="sh ./deploy.sh"

      - name: Set deployment state to success
        env:
          REPO_DEPLOYMENT_TOKEN: ${{ secrets.REPO_DEPLOYMENT_TOKEN }}
        if: ${{ success() && env.REPO_DEPLOYMENT_TOKEN != null }}
        uses: deliverybot/deployment-status@v1
        with:
          state: success
          token: ${{ secrets.REPO_DEPLOYMENT_TOKEN }}

      - name: Set deployment state to failure
        env:
          REPO_DEPLOYMENT_TOKEN: ${{ secrets.REPO_DEPLOYMENT_TOKEN }}
        if: ${{ failure() && env.REPO_DEPLOYMENT_TOKEN != null }}
        uses: deliverybot/deployment-status@v1
        with:
          state: failure
          token: ${{ secrets.REPO_DEPLOYMENT_TOKEN }}
